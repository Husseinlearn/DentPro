# Generated by Django 5.1.2 on 2025-08-17 19:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0008_alter_doctor_user'),
        ('medicalrecord', '0006_alter_prescribedmedication_clinical_exam_and_more'),
        ('patients', '0008_alter_patient_options_disease_medication_and_more'),
        ('procedures', '0011_alter_dentalprocedure_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppliedMedicationPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescribed_at', models.DateTimeField(auto_now_add=True, verbose_name='Applied At')),
                ('mode', models.CharField(choices=[('append', 'append'), ('replace', 'replace')], default='append', max_length=10, verbose_name='Mode')),
            ],
            options={
                'verbose_name': 'Applied Medication Package',
                'verbose_name_plural': 'Applied Medication Packages',
                'ordering': ['-prescribed_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicationPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Package Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Medication Package',
                'verbose_name_plural': 'Medication Packages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicationPackageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('times_per_day', models.PositiveIntegerField(default=1, verbose_name='Times Per Day')),
                ('dose_unit', models.CharField(max_length=50, verbose_name='Dose Unit')),
                ('number_of_days', models.PositiveIntegerField(default=1, verbose_name='Number Of Days')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Medication Package Item',
                'verbose_name_plural': 'Medication Package Items',
            },
        ),
        migrations.AlterModelOptions(
            name='prescribedmedication',
            options={'ordering': ['-prescribed_at'], 'verbose_name': 'Prescribed Medication', 'verbose_name_plural': 'Prescribed Medications'},
        ),
        migrations.AddConstraint(
            model_name='prescribedmedication',
            constraint=models.CheckConstraint(condition=models.Q(('times_per_day__gt', 0)), name='pm_times_per_day_gt_0'),
        ),
        migrations.AddConstraint(
            model_name='prescribedmedication',
            constraint=models.CheckConstraint(condition=models.Q(('number_of_days__gt', 0)), name='pm_number_of_days_gt_0'),
        ),
        migrations.AddField(
            model_name='appliedmedicationpackage',
            name='clinical_exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_medication_packages', to='procedures.clinicalexam', verbose_name='Clinical Exam'),
        ),
        migrations.AddField(
            model_name='appliedmedicationpackage',
            name='prescribed_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.doctor', verbose_name='Prescribed By'),
        ),
        migrations.AddField(
            model_name='medicationpackage',
            name='disease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='medication_packages', to='patients.disease', verbose_name='Disease'),
        ),
        migrations.AddField(
            model_name='appliedmedicationpackage',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='medicalrecord.medicationpackage', verbose_name='Medication Package'),
        ),
        migrations.AddField(
            model_name='medicationpackageitem',
            name='medication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='package_items', to='medicalrecord.medication', verbose_name='Medication'),
        ),
        migrations.AddField(
            model_name='medicationpackageitem',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='medicalrecord.medicationpackage', verbose_name='Package'),
        ),
        migrations.AddIndex(
            model_name='medicationpackage',
            index=models.Index(fields=['is_active'], name='medicalreco_is_acti_87e091_idx'),
        ),
        migrations.AddIndex(
            model_name='medicationpackage',
            index=models.Index(fields=['disease'], name='medicalreco_disease_59f40e_idx'),
        ),
        migrations.AddIndex(
            model_name='appliedmedicationpackage',
            index=models.Index(fields=['mode'], name='medicalreco_mode_8af822_idx'),
        ),
        migrations.AddIndex(
            model_name='appliedmedicationpackage',
            index=models.Index(fields=['clinical_exam'], name='medicalreco_clinica_f8b2d3_idx'),
        ),
        migrations.AddIndex(
            model_name='appliedmedicationpackage',
            index=models.Index(fields=['package'], name='medicalreco_package_490895_idx'),
        ),
        migrations.AddConstraint(
            model_name='medicationpackageitem',
            constraint=models.CheckConstraint(condition=models.Q(('times_per_day__gt', 0)), name='mpi_times_per_day_gt_0'),
        ),
        migrations.AddConstraint(
            model_name='medicationpackageitem',
            constraint=models.CheckConstraint(condition=models.Q(('number_of_days__gt', 0)), name='mpi_number_of_days_gt_0'),
        ),
        migrations.AlterUniqueTogether(
            name='medicationpackageitem',
            unique_together={('package', 'medication')},
        ),
    ]
